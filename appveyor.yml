version: '{build}'
skip_tags: true
image:
- Visual Studio 2017
- Ubuntu1804

platform:
  - Win32
  - x86
  - x64
configuration: RelWithDebInfo

matrix:
  exclude:
    - image: Ubuntu1804
      platform: Win32
    - image: Visual Studio 2017
      platform: x86
    - image: Visual Studio 2017
      platform: x64
init:
- cmd: git config --global core.autocrlf true

install:
  - cmd: powershell -Command Start-FileDownload http://assets.maxmitti.tk/openclonk-deps-vs140-i386-easy.7z
  - cmd: 7z x openclonk-deps-vs140-i386-easy.7z
  - cmd: powershell -Command Start-FileDownload http://fulgen.bplaced.net/files/fmodapi375win.zip
  - cmd: 7z x fmodapi375win.zip
  - cmd: copy fmodapi375win\api\inc\* deps\include
  - cmd: copy fmodapi375win\api\lib\* deps\lib
  - sh: |
      mkdir ramdisk
      sudo mount -t tmpfs tmpfs ramdisk
      cd ramdisk
      if [ "$PLATFORM" = "x86" ]; then
        curl -L https://github.com/legacyclonk/ubuntu-1804-x86-chroot/releases/download/continuous-master/chroot.tar.xz | sudo tar xJ
        curl -L https://raw.githubusercontent.com/legacyclonk/ubuntu-1804-x86-chroot/master/setup_chroot.sh | sudo bash -e -
      fi

before_build:
  - cmd: cmake -G "Visual Studio 15 2017" -DCMAKE_BUILD_TYPE=RelWithDebInfo .
  - cmd: ls

build:
  parallel: true
  project: LegacyClonk.sln

for:
-
  matrix:
      only:
        - image: Ubuntu1804

  build_script:
  - sh: |
      if [ "$PLATFORM" = "x86" ]; then
        sudo rsync -rv --exclude=ramdisk .. chroot/legacyclonk
        sudo chroot chroot bash -c 'cd /legacyclonk && appveyor/build.sh'
        cp chroot/legacyclonk/build/LegacyClonk.tar.gz .
      else
        rsync -rv --exclude=ramdisk .. legacyclonk
        cd legacyclonk
        appveyor/build.sh
        mv build/{LegacyClonk.tar.gz,System.c4g,Graphics.c4g} .
      fi

after_build:
  - cmd: ls
  - cmd: ls RelWithDebInfo
  - cmd: mkdir appdir
  - cmd: copy glew32.dll appdir
  - cmd: copy RelWithDebInfo\*.exe appdir
  - cmd: copy RelWithDebInfo\*.pdb appdir
  - cmd: cd appdir
  - ps: |
      $ErrorActionPreference = "Stop"
      Copy-Item planet\System.c4g -Destination System.c4g -Recurse
      .\c4group.exe System.c4g -p
      Copy-Item planet\Graphics.c4g -Destination Graphics.c4g -Recurse
      .\c4group.exe Graphics.c4g -p
      $release = Invoke-RestMethod -URI https://api.github.com/repos/legacyclonk/content/releases/tags/continuous-${APPVEYOR_REPO_BRANCH}
      if ($release.id)
      {
        $assets = Invoke-RestMethod -URI https://api.github.com/repos/legacyclonk/content/releases/${release_id}/assets
        foreach ($asset in $assets)
        {
          Invoke-WebRequest -URI "https://api.github.com/repos/legacyclonk/content/releases/assets/${asset.id}" -OutFile $asset.name
        }
      }
  - cmd: 7z a LegacyClonk.zip *
  - cmd: appveyor PushArtifact .\LegacyClonk.zip -DeploymentName LegacyClonk
  -
  - sh: |
      release_id=$(GET "https://api.github.com/repos/legacyclonk/content/releases/tags/continuous-${APPVEYOR_REPO_BRANCH}" | jq -r -e -c ".id")
      if [ $? -eq 0 ]; then
        GET "https://api.github.com/repos/legacyclonk/content/releases/${release_id}/assets" | jq -r -e -c '.[] | "\(.name) \(.id)"' | while read name id; do
          GET -H 'Accept: application/octet-stream' "https://api.github.com/repos/legacyclonk/content/releases/assets/${id}" > "$name"
          tar -rvf LegacyClonk.tar.gz "$name"
        done
      fi
      appveyor PushArtifact LegacyClonk.tar.gz -DeploymentName LegacyClonk -FileName "LegacyClonk-${PLATFORM}.tar.gz"
      if [ "$PLATFORM" = "x64" ]; then
        appveyor PushArtifact Graphics.c4g -DeploymentName LegacyClonk;
        appveyor PushArtifact System.c4g -DeploymentName LegacyClonk;
      fi

test: off
deploy:
- provider: GitHub
  tag: continuous-$(APPVEYOR_REPO_BRANCH)
  release: Continuous build
  auth_token:
    secure: YE0vsP2wBEPL52Fo6eOeql9XqUlWimQ6Hbw2HPAOIorw4peKSiniwoU4Dhh/vXJ+
  artifact: LegacyClonk
  prerelease: true
  force_update: true
